; Example to write fibonacci numbers and a greeting to output port
	JSR FIBONACCI
	JSR WRITEHELLO
OVER:
    JMP OVER

FIBONACCI:
	PUSH    0    ; LOCAL 2: tmp  = 0
	PUSH	0    ; LOCAL 1: a = 0
	PUSH	1    ; LOCAL 0: b = 1
; -----	
	GET 2
	JSR PRINTNUMBER  ; print(a)
	POP
	GET 0
	JSR PRINTNUMBER  ; print(b)
	POP
SMALLENOUGH:
	GET 1
	-GET 0
	ADD   
	SET 2   ; tmp = a+b
	GET 0
	SET 1   ; a = b
	GET 2
	SET 0   ; b = tmp	
	GET 2
	JSR PRINTNUMBER  ; print(tmp)
	POP
	GET 1
	-GET 0
	CARRY  ; a+b > 255 ?
	JZ SMALLENOUGH
; ------	
	POP
	POP
	POP
	RET
	
	
WRITEHELLO:
	PUSH 0      ; LOCAL 0: i = 0
; ------     
LOOPHELLO:
    GET 0
     LOADX HELLO 
      DUP
     JZ ENDHELLO
    WRITE 0
    INC
    JMP LOOPHELLO
ENDHELLO:
     POP
; ------
    POP
	RET
	
HELLO:
	DATA "Hello World!" 10 0

	
PRINTNUMBER:  ; ( N  ->  0  )
		      ; CALL   5 : n
			  ; RETURN 5 : 0
			  ; ADDR   3,4
	PUSH 0    ; LOCAL  2 = number
	PUSH 0    ; LOCAL  1 = positionvalue
	PUSH 0    ; LOCAL  0 = digit	
; ------
	GET 5
	DUP
	-SET 2     ; number = n		
	PUSH 10
	LT
	JNZ PRINTLAST
	PUSH 100
	SET 1     ; positionvalue = 100	
	JSR DETERMINEDIGIT
	DUP
	JZ  NO100
	JSR PRINTDIGIT	
NO100:	
	PUSH 10
	SET 1     ; positionvalue = 10
	JSR DETERMINEDIGIT
	JSR PRINTDIGIT
PRINTLAST:	
	PUSH 1	
	SET 1     ; positionvalue = 1
	JSR DETERMINEDIGIT
	JSR PRINTDIGIT
; ------
	PUSH 32
	WRITE 0         ; print(' ');
	POP
	POP
	POP
	RET
	
DETERMINEDIGIT:  ; ( NUMBER POSITIONVALUE -  ->  NUMBER POSITIONVALUE DIGIT )
			; CALL 4  : n number      
			; CALL 3  : p positionvalue  (e.g. 100 or 10)			
			; CALL 2  : -
			; RETURN 4 : n number with the digit set to 0
			; RETURN 3 : p positionvalue (unchanged)
			; RETURN 2 : digit the digit (0 to x)
		    ; ADDR   0,1
; ----
	PUSH 0
	SET 2
CHECKBIGENOUGH:
	GET 4
	-GET 3
	LT       ; p < n ? 
    JNZ DIGITDONE
	GET 4
	-GET 3
	--SUB
	SET 4    ; n = n-p	
	GET 2
	INC
	SET 2    ; digit = digit+1
	JMP CHECKBIGENOUGH
DIGITDONE:
; -----
	RET
	
PRINTDIGIT:    ; ( DIGIT -> - )
			; CALL 2    : digit
			; ADDR 0,1
	GET 2
	PUSH 48
	ADD
	WRITE 0
	RET
	